plugins {
	id 'java'
}

repositories {
	mavenCentral()
}

dependencies {
	testImplementation(platform('org.junit:junit-bom:5.7.1'))
	testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

task(day1, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day01.Day1Floors'
   classpath = sourceSets.main.runtimeClasspath
}

task(day2, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day02.Day2Wrapping'
   classpath = sourceSets.main.runtimeClasspath
}

task(day3, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day03.Day3PresentDelivery'
   classpath = sourceSets.main.runtimeClasspath
}

task(day4, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day04.Day4MD5'
   classpath = sourceSets.main.runtimeClasspath
}

task(day5, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day05.Day5NiceList'
   classpath = sourceSets.main.runtimeClasspath
}

task(day6, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day06.Day6Lights'
   classpath = sourceSets.main.runtimeClasspath
}

task(day7, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day07.Day7LogicalCircuits'
   classpath = sourceSets.main.runtimeClasspath
}

task(day8, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day08.Day8CharEncoding'
   classpath = sourceSets.main.runtimeClasspath
}

task(day9, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day09.Day9MinMaxTrip'
   classpath = sourceSets.main.runtimeClasspath
}

task(day10, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day10.Day10LookAndSay'
   classpath = sourceSets.main.runtimeClasspath
}

task(day11, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day11.Day11Passwords'
   classpath = sourceSets.main.runtimeClasspath
}

task(day12, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day12.Day12JSON'
   classpath = sourceSets.main.runtimeClasspath
}

task(day13, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day13.Day13Seating'
   classpath = sourceSets.main.runtimeClasspath
}

task(day14, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day14.Day14DeerRace'
   classpath = sourceSets.main.runtimeClasspath
}

task(day15, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day15.Day15CookieRecipes'
   classpath = sourceSets.main.runtimeClasspath
}

task(day16, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day16.Day16GiftForensics'
   classpath = sourceSets.main.runtimeClasspath
}

task(day17, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day17.Day17ContainerCombinations'
   classpath = sourceSets.main.runtimeClasspath
}

task(day18, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day18.Day18LightsMap'
   classpath = sourceSets.main.runtimeClasspath
}

task(day19, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day19.Day19MedicineMolecule'
   classpath = sourceSets.main.runtimeClasspath
}

task(day20, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day20.Day20InfiniteElves'
   classpath = sourceSets.main.runtimeClasspath
}

task(day21, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day21.Day21RPG'
   classpath = sourceSets.main.runtimeClasspath
}

task(day22, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day22.Day22RPGWiz'
   classpath = sourceSets.main.runtimeClasspath
}

task(day23, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day23.Day23SimpleComputer'
   classpath = sourceSets.main.runtimeClasspath
}

task(day24, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day24.Day24PackSleigh'
   classpath = sourceSets.main.runtimeClasspath
}

task(day25, dependsOn: 'classes', type: JavaExec) {
   main = 'net.ddns.spellbank.day25.Day25Code'
   classpath = sourceSets.main.runtimeClasspath
}